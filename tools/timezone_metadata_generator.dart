import 'dart:collection';
import 'dart:convert';
import 'dart:io';
import 'package:meta/meta.dart';
import 'copyright_notice.dart';
import 'file_writer.dart';

/// A utility that generates the binary serialization of the prefix/time zones mappings from a
/// human-readable text file.
class TimezoneMetadataGenerator extends FileWriter {
  const TimezoneMetadataGenerator(super.args);

  String start() {
    File file = File(args.inputFilePath);
    Map<int, String> timezones = parseTextFile(file);
    _saveTimezoneMetadataMap(timezones);
    return '${args.metadataType} metadata generated at ${args.outputDirectory}';
  }

  /// Reads phone prefix data from the provided input stream and returns a SortedMap with the
  /// prefix to time zones mappings.
  @visibleForTesting
  Map<int, String> parseTextFile(File file) {
    SplayTreeMap<int, String> timeZoneMap = SplayTreeMap();

    for (String line in file.readAsLinesSync()) {
      line = line.trim();
      if (line.isEmpty || line.startsWith("#")) {
        continue;
      }
      int indexOfPipe = line.indexOf('|');
      int prefix = int.parse(line.substring(0, indexOfPipe));
      String timezones = line.substring(indexOfPipe + 1);
      timeZoneMap.putIfAbsent(prefix, () => jsonEncode(timezones));
    }

    return timeZoneMap;
  }

  /// Mark: create a convenient map of all the supported timezones
  /// with their JSON data
  void _saveTimezoneMetadataMap(Map<int, String> timezones) {
    StringBuffer stringBuffer = StringBuffer();
    String copyright = CopyrightNotice(2009, DateTime.now().year).toString();
    String fileOverview = ''
        '\n\n'
        '// [fileoverview]\n'
        '// This file is automatically generated from [${args.inputFilePath}].\n'
        '// Please do not modify it directly.\n'
        '\n\n';

    String timezoneMetadataMap = ''
        ' class TimezoneMetadataMap {\n'
        '   const TimezoneMetadataMap();'
        '\n\n'
        '  static Map<int, String> get timezones {\n'
        '     return $timezones;\n'
        '   }\n'
        ' }\n';

    stringBuffer
      ..write(copyright)
      ..write(fileOverview)
      ..write(timezoneMetadataMap);

    return saveAsStringToSubDirectory(
      'timezone_metadata_map',
      stringBuffer.toString(),
    );
  }
}
